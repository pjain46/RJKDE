% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{rj_mcmc_rcpp}
\alias{rj_mcmc_rcpp}
\title{Run Reversible Jump Markov Chain Monte Carlo for Gaussian Mixture Models}
\usage{
rj_mcmc_rcpp(
  y,
  ygrid,
  drop_add_prob = as.numeric(c(0.45, 0.1, 0.45)),
  sig_a = 5,
  sig_b = 5,
  mu_prior_b = 3,
  mu_step_size = 0.1,
  k = 20L,
  bw = 0.2,
  mc = 5000L,
  mu_h = 0,
  sig_h = 1
)
}
\arguments{
\item{drop_add_prob}{Numeric vector of probabilities for (drop, keep, add) moves
(default: c(0.45, 0.1, 0.45)).}

\item{y:}{A numeric vector of observed data points.}

\item{ygrid:}{A numeric vector of grid points for density estimation (eg., ygrid <- seq(min(y),max(y),length.out = 500)).}

\item{sig_a:}{Shape parameter for Beta prior on bandwidths (default: 5).}

\item{sig_b:}{Scale parameter for Beta prior on bandwidths (default: 5).}

\item{mu_prior_b:}{Prior parameter for means (default: 3).}

\item{mu_step_size:}{Step size for mean proposals (default: 0.1).}

\item{k:}{Initial number of mixture components (default: 20).}

\item{bw:}{Bandwidth parameter (default: 0.2).}

\item{mc:}{Number of MCMC iterations (default: 5000).}

\item{mu_h:}{Hyperparameter for mean adjustment (default: 0.0).}

\item{sig_h:}{Hyperparameter for bandwidth adjustment (default: 1.0).}
}
\value{
A List object containing:
\describe{
  \item{fsamps}{Matrix of density samples (columns) evaluated at ygrid points (rows)}
  \item{fsamps_adj}{Adjusted density samples}
  \item{ksamps}{Vector of component counts across iterations}
  \item{ygrid}{Input grid points (for reference)}
}
}
\description{
Performs Bayesian estimation of Gaussian mixture models with variable number of components
using Reversible Jump MCMC (RJMCMC).
}
\details{
The algorithm implements:
\enumerate{
  \item Component add/drop component moves via RJMCMC
  \item Adaptive proposals for means and bandwidths
  \item Posterior density estimation on provided grid
}
}
\examples{
\dontrun{
# Generate sample data
set.seed(123)
y <- c(rnorm(200, -2, 1), rnorm(300, 2, 1))

# Create evaluation grid
ygrid <- seq(-5, 5, length.out = 100)

# Run MCMC
results <- rj_mcmc_rcpp(y, ygrid, mc = 1000)

# Plot posterior mean density
plot(ygrid, rowMeans(results$fsamps), type = "l",
     main = "Posterior Density Estimate")
}

}
\seealso{
\code{\link{KDE_density_rcpp}} for the density calculation function
}
